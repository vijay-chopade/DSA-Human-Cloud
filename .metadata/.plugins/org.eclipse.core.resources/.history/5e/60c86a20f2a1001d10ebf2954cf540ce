package com.ServerAPI;

import java.util.Scanner;

public class Runner {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		while(true) {
			System.out.print("Enter no: ");
		int input = sc.nextInt();
		Runner.setList(input);
		}
	}

	public static void getList() {

	}

	public static void setList(int i) {
		Menu listMenu = new Menu(1, "LinkedList");
		Menu queMenu = new Menu(2, "Queue");
		Menu stackMenu = new Menu(3, "Stack");
		if (i == 1) {
			listMenu.addMI(new MenuItem(1, "insert()"));
			listMenu.addMI(new MenuItem(2, "insertStart()"));
			listMenu.addMI(new MenuItem(3, "insertAt()"));
			listMenu.addMI(new MenuItem(4, "deleteAt()"));
			listMenu.addMI(new MenuItem(5, "deleteAll()"));
			listMenu.addMI(new MenuItem(6, "show()"));
			listMenu.addMI(new MenuItem(7, "size()"));
			listMenu.addMI(new MenuItem(8, "isEmpty()"));
			listMenu.addMI(new MenuItem(0, "Back to Main Menu"));
			listMenu.display1();
		} else if (i == 2) {
			queMenu.addMI(new MenuItem(1, "enQue()"));
			queMenu.addMI(new MenuItem(2, "deQue()"));
			queMenu.addMI(new MenuItem(3, "show()"));
			queMenu.addMI(new MenuItem(4, "size()"));
			queMenu.addMI(new MenuItem(5, "isEmpty()"));
			queMenu.addMI(new MenuItem(0, "Back to Main Menu"));
			queMenu.display1();
		}
		else if (i == 3) {
			stackMenu.addMI(new MenuItem(1, "Push"));
			stackMenu.addMI(new MenuItem(2, "pop()"));
			stackMenu.addMI(new MenuItem(3, "fatch()"));
			stackMenu.addMI(new MenuItem(4, "show()"));
			stackMenu.addMI(new MenuItem(5, "Size()"));
			stackMenu.addMI(new MenuItem(6, "isEmpty()"));
			stackMenu.addMI(new MenuItem(7, "capacity()"));
			stackMenu.addMI(new MenuItem(8, "peek()"));
			stackMenu.addMI(new MenuItem(0, "Back to Main Menu"));
			stackMenu.display1();
		}
		else  {
			listMenu.display();
			queMenu.display();
			stackMenu.display();
			System.out.println();
		}

	}
}